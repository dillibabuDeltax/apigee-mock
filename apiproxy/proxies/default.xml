<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<ProxyEndpoint name="default">
    <FaultRules>
    </FaultRules>
    <PreFlow>
       
    </PreFlow>
    <Flows>
    	
	    	<Flow name="View personalized greeting">
	    		<Description>View a personalized greeting for the specified or guest user.</Description> 
	    		<Request>
			    </Request> 
			    <Condition>(request.path Matches "/") and (request.verb = "GET")</Condition>
				<Response/>
			</Flow>     
	    	<Flow name="Get help">
	    		<Description>View help information about available resources in HTML format.</Description> 
	    		<Request>
			    </Request> 
			    <Condition>(request.path Matches "/help") and (request.verb = "GET")</Condition>
				<Response/>
			</Flow>     
	    	<Flow name="View personalized greeting">
	    		<Description>View a personalized greeting for the specified or guest user.</Description> 
	    		<Request>
			    </Request> 
			    <Condition>(request.path Matches "/user") and (request.verb = "GET")</Condition>
				<Response/>
			</Flow>     
	    	<Flow name="View API affirmation">
	    		<Description>View API affirmation in HTML format.</Description> 
	    		<Request>
			    </Request> 
			    <Condition>(request.path Matches "/iloveapis") and (request.verb = "GET")</Condition>
				<Response/>
			</Flow>     
	    	<Flow name="View IP address">
	    		<Description>View the IP address of the client in JSON format.</Description> 
	    		<Request>
			    </Request> 
			    <Condition>(request.path Matches "/ip") and (request.verb = "GET")</Condition>
				<Response/>
			</Flow>     
	    	<Flow name="View XML response">
	    		<Description>View a sample response in XML format.</Description> 
	    		<Request>
			    </Request> 
			    <Condition>(request.path Matches "/xml") and (request.verb = "GET")</Condition>
				<Response/>
			</Flow>     
	    	<Flow name="View JSON response">
	    		<Description>View a sample response in JSON format.</Description> 
	    		<Request>
			    </Request> 
			    <Condition>(request.path Matches "/json") and (request.verb = "GET")</Condition>
				<Response/>
			</Flow>     
	    	<Flow name="View request headers and body">
	    		<Description>View the request headers and body in JSON format.</Description> 
	    		<Request>
			    </Request> 
			    <Condition>(request.path Matches "/echo") and (request.verb = "GET")</Condition>
				<Response/>
			</Flow>     
	    	<Flow name="Send request and view request headers and body">
	    		<Description>Send a request and view the resulting request headers and body in JSON format. The request payload can be specified using one of the following formats: application/json, application/x-www-form-urlencoded, or application/xml.</Description> 
	    		<Request> 
			    </Request> 
			    <Condition>(request.path Matches "/echo") and (request.verb = "POST")</Condition> 
				<Response/>
			</Flow>
	    	<Flow name="View status code and message">
	    		<Description>View status code and message for the specified value.</Description> 
	    		<Request>
			    </Request> 
			    <Condition>(request.path Matches "/statuscode/{code}") and (request.verb = "GET")</Condition>
				<Response/>
			</Flow>     
	    	<Flow name="Validate access using basic authentication">
	    		<Description>Validate access using basic authentication.</Description> 
	    		<Request>
			    </Request> 
			    <Condition>(request.path Matches "/auth") and (request.verb = "GET")</Condition>
				<Response/>
			</Flow>     
	   
    </Flows>
    <PostFlow>
    </PostFlow>
    <RouteRule name="NoRoute">
        <Condition>request.verb == "OPTIONS"</Condition>
    </RouteRule>
    <!-- This node will be dynamically generated by the proxy-gen tool. It covers BasePath and VirtualHost entries -->
    <RouteRule name="mock-apigeemock">
    	<TargetEndpoint>mock-apigeemock</TargetEndpoint>
        <Condition>((request.header.x-mock == "y") OR (request.header.x-mock == "Y")) AND (proxy.pathsuffix MatchesPath "/*")</Condition>
    </RouteRule>
    <RouteRule name="SpringBootRKE-apigeemock">
    	<TargetEndpoint>SpringBootRKE-apigeemock</TargetEndpoint>
        <Condition>(request.header.x-mock != "y") AND (request.header.x-mock != "Y") AND (proxy.pathsuffix MatchesPath "/*")</Condition>
    </RouteRule>
    <HTTPProxyConnection>        
    	<BasePath>/v1/apigeemock</BasePath>
		<VirtualHost>secure</VirtualHost>
    </HTTPProxyConnection>
</ProxyEndpoint>